@page
@model StudioCentral.StudioLocationsModel
@using DataAccess.Models
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewData["Title"] = "Studio Locations";
}

<div class="bg-dark content-maint mh-100 min-vh-100">
    @foreach (var error in Model.Errors)
    {
        <script>
                iziToast.error({
                    title: '@error.Field',
                    message: '@error.Message',
                    position: 'center'
                });
        </script>
    }
    <div class="row">
        <div class="col text-center">
            <h4 class="k-primary">
                <small class="k-text-primary">@ViewData["Title"]</small>
            </h4>
        </div>
    </div>
    <div class="row mh-100 min-vh-100">
        <div class="col-md-12 mh-100 min-vh-100">
            @Html.AntiForgeryToken()         
            @(Html.Kendo().Grid<StudioCentral.ViewModels.StudioViewModel>()
                .Name("grdStudio")
                .Columns(columns =>
                {
                    columns.Bound(c => c.StudioName).Width("20%").HeaderHtmlAttributes(new { @class = "text-center" });
                    columns.Bound(c => c.Email).Width("20%").HeaderHtmlAttributes(new { @class = "text-center" });
                    columns.Bound(c => c.Postcode).Width("10%")
                    .HtmlAttributes(new { @class = "text-right" }).HeaderHtmlAttributes(new { @class = "text-center" });
                    columns.Bound(c => c.ContactNumber).Width("10%")
                    .HtmlAttributes(new { @class = "text-right" }).HeaderHtmlAttributes(new { @class = "text-center" });
                    columns.Bound(c => c.SiteId).Title("MindBody Site Id").Width("10%")
                    .HtmlAttributes(new { @class = "text-right" }).HeaderHtmlAttributes(new { @class = "text-center" });
                    columns.Command(c =>
                    {
                        c.Edit().Text(" ").IconClass("k-icon k-i-edit").HtmlAttributes(new { style = "align-text:center" });                       
                        c.Custom("Activation").Text(" ").IconClass("k-icon k-i-hyperlink-globe").HtmlAttributes(new { style = "align-text:center" }).Click("showDetails");
                        c.Custom("EmailSetting").Text(" ").IconClass("k-icon k-i-hyperlink-email").HtmlAttributes(new { style = "align-text:center" }).Click("showEmailConfig");
                        c.Custom("SmsSetting").Text(" ").IconClass("k-icon k-i-comment").HtmlAttributes(new { style = "align-text:center" }).Click("showSmsConfig");
                        c.Destroy().Text(" ").IconClass("k-icon k-i-delete").HtmlAttributes(new { style = "align-text:center" });
                    }).Title("Actions").Width("15%").HtmlAttributes(new { @class = "text-center" }).HeaderHtmlAttributes(new { @class = "text-center" });
                }).HtmlAttributes(new { @class = "text-center" })
                .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("CustomStudioEditor").Window(w => w.Title("New Studio Details"))
                )
                .Navigatable()
                .Filterable(filterable => filterable
                    .Extra(false)
                    .Operators(operators => operators
                        .ForString(str => str.Clear()
                            .StartsWith("Starts with")
                            .IsEqualTo("Is equal to")
                            .IsNotEqualTo("Is not equal to")
                        ))
                    )
                .Mobile()
                .Sortable()
                .Scrollable(scr => scr.Height(400))
                .HtmlAttributes(new { style = "height:100%; width:auto; font-size:13px;" })
                .Pageable(p =>
                {
                    p.ButtonCount(5);
                    p.PageSizes(true);
                })
                .ToolBar(tb =>
                {
                    tb.Create().Text("New Studio").IconClass("k-icon .k-i-marker-pin");
                    tb.Search();
                })
                .Search(search =>
                {
                    search.Field(f => f.StudioName);
                })
                .Events(e => e.DataBound("onDataBound").SaveChanges("onGridSave").Save("onSave").Edit("onEdit"))
                .DataSource(ds => ds.Ajax()
                    .PageSize(10)
                    .Read(r => r.Url("/GlobalAdmin/StudioLocations?handler=Read").Data("forgeryToken"))
                    .Create(c => c.Url("/GlobalAdmin/StudioLocations?handler=Create").Data("forgeryToken"))
                    .Update(u => u.Url("/GlobalAdmin/StudioLocations?handler=Update").Data("forgeryToken"))
                    .Destroy(u => u.Url("/GlobalAdmin/StudioLocations?handler=Destroy").Data("forgeryToken"))
                    .Model(m =>
                    {
                        m.Id(id => id.StudioId);
                        m.Field(x => x.StudioId).Editable(false);
                    })
                )
            )
        </div>
    </div>
</div>


<div id="GenerateCode" style="display:none">
    <div class="col-md-12" style="float:none; margin:auto;">

        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Activation Code</i>
            @(Html.Kendo().TextBox()
                .Name("ActivationCode")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox", data_bind = "value:ActivationCode" })
            )
        </label>
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i> Activation Link</i>
            @(Html.Kendo().TextBox()
                .Name("ActivationLink")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox", data_bind = "value:ActivationCode" })
            )
        </label>
        @(Html.Kendo().Button()
        .Name("CodeLink")
        .HtmlAttributes(new { type = "button", @class = "k-primary" })
        .Content("Generate Activation Code & Link")
        .Events(ev => ev.Click("onClick")))

    </div>
</div>


<div id="EmailSetting" style="display:none">
    <div class="col-md-12" style="float:none; margin:auto;">
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Mail Server</i>
            @(Html.Kendo().TextBox()
                .Name("MailServer")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox" })
            )
        </label>
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Mail Port</i>
            @(Html.Kendo().TextBox()
                .Name("MailPort")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox"})
            )
        </label>
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Sender Name</i>
            @(Html.Kendo().TextBox()
                .Name("SenderName")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox" })
            )
        </label>
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Sender</i>
            @(Html.Kendo().TextBox()
                .Name("Sender")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox" })
            )
        </label>
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Password</i>
            @(Html.Kendo().TextBox()
                .Name("Password")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox" })
            )
        </label>


        @(Html.Kendo().Button()
        .Name("SMTP")
        .HtmlAttributes(new { type = "button", @class = "k-primary" })
        .Content("Update")
        .Events(ev => ev.Click("onClickUpdateSMTP")))

    </div>
</div>


<div id="SmsSetting" style="display:none">
    <div class="col-md-12" style="float:none; margin:auto;">
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Account SID</i>
            @(Html.Kendo().TextBox()
                .Name("AccountSid")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox" })
            )
        </label>
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Token</i>
            @(Html.Kendo().TextBox()
                .Name("AuthToken")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox"})
            )
        </label>
        <label class="km-inline-field km-label-above" style="width:100%;">
            <i>Sender Number</i>
            @(Html.Kendo().TextBox()
                .Name("Number")
                .HtmlAttributes(new { style = "width:100%", @class = "k-textbox" })
            )
        </label>

        @(Html.Kendo().Button()
        .Name("SMS")
        .HtmlAttributes(new { type = "button", @class = "k-primary" })
        .Content("Update")
        .Events(ev => ev.Click("onClickUpdateSMS")))
    </div>
</div>


<script>

    var siteId = 0;
    var studioId = 0;

    var KendoWindowManager = {
        InitKendoWindow: function () {           

            $('#GenerateCode').kendoWindow({
                title: "Generate Activation Code and Link",
                width: "60%",
                modal: true,
                actions: ["Close"],
                visible: false
            });


            $('#EmailSetting').kendoWindow({
                title: "SMTP Configuration",
                width: "35%",
                modal: true,
                actions: ["Close"],
                visible: false
            });

            $('#SmsSetting').kendoWindow({
                title: "SMS Configuration",
                width: "35%",
                modal: true,
                actions: ["Close"],
                visible: false
            });
        }
    }
       

    function showDetails(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#GenerateCode").data("kendoWindow");
        challengeMemberId = dataItem["StudioId"];
        var SiteId = dataItem["SiteId"];
        $('#SiteId').val(SiteId).addClass('readonly');
        siteId = SiteId;
        if (SiteId != null) {

            $('#ActivationCode').val("");
            $('#ActivationLink').val("");
            wnd.center().open();

        } else {
            iziToast.warning({
                title: 'Caution',
                message: 'Please add Site Id to continue.',
                position: 'center'
            });
        }

    }

    function showEmailConfig(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#EmailSetting").data("kendoWindow");
        studioId = dataItem["StudioId"];

        if (studioId != 0) {
            $.ajax({
                type: "POST",
                url: "/GlobalAdmin/StudioLocations?handler=ReadEmailSettings&studioId=" + studioId,
                dataType: 'json',
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {
                    if (result != null) {
                        $('#MailServer').val(result.MailServer);
                        $('#MailPort').val(result.MailPort);
                        $('#SenderName').val(result.SenderName);
                        $('#Sender').val(result.Sender);
                        $('#Password').val(result.Password);
                    }
                },
                error: function () {
                    iziToast.error({
                        title: 'Error',
                        message: 'Unable to retrieve the information. Please contact your system administrator.',
                    });
                }
            });
        } else {
            iziToast.warning({
                title: 'Caution',
                message: 'No Studio Id selected.',
                position: 'center'
            });
        }
        wnd.center().open();
    }

    function onClickUpdateSMTP() {
        if (studioId != 0) {
            var email = {
                StudioId: studioId,
                MailServer: $('#MailServer').val(),
                MailPort: $('#MailPort').val(),
                SenderName: $('#SenderName').val(),
                Sender: $('#Sender').val(),
                Password: $('#Password').val()
            };
            $.ajax({
                type: "POST",
                url: "/GlobalAdmin/StudioLocations?handler=UpdateEmailSettings",
                data: email,
                dataType: 'json',
                contentType: "application/x-www-form-urlencoded",
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {


                    iziToast.success({
                        title: 'Success',
                        message: result.Message,
                    });
                    var wnd = $("#EmailSetting").data("kendoWindow");
                    wnd.close();

                },
                error: function () {
                    iziToast.error({
                        title: 'Error',
                        message: 'Unable to update record. Please contact your system administrator.'
                    });
                }
            });
        } else {
            iziToast.warning({
                title: 'Caution',
                message: 'No Studio Id selected.',
                position: 'center'
            });
        }
    };

    function showSmsConfig(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#SmsSetting").data("kendoWindow");
        studioId = dataItem["StudioId"];

        if (studioId != 0) {
            $.ajax({
                type: "POST",
                url: "/GlobalAdmin/StudioLocations?handler=ReadSmsSettings&studioId=" + studioId,
                dataType: 'json',
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {
                    if (result != null) {
                        $('#AccountSid').val(result.AccountSid);
                        $('#AuthToken').val(result.AuthToken);
                        $('#Number').val(result.Number);
                    }
                },
                error: function () {
                    iziToast.error({
                        title: 'Error',
                        message: 'Unable to retrieve the information. Please contact your system administrator.',
                    });
                }
            });
        } else {
            iziToast.warning({
                title: 'Caution',
                message: 'No Studio Id selected.',
                position: 'center'
            });
        }
        wnd.center().open();
    }

    function onClickUpdateSMS() {
        if (studioId != 0) {
            var sms = {
                StudioId: studioId,
                AccountSid: $('#AccountSid').val(),
                AuthToken: $('#AuthToken').val(),
                Number: $('#Number').val(),

            };
            $.ajax({
                type: "POST",
                url: "/GlobalAdmin/StudioLocations?handler=UpdateSmsSettings",
                data: sms,
                dataType: 'json',
                contentType: "application/x-www-form-urlencoded",
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {

                    iziToast.success({
                        title: 'Success',
                        message: result.Message,
                    });

                    var wnd = $("#SmsSetting").data("kendoWindow");
                    wnd.close();

                },
                error: function () {
                    iziToast.error({
                        title: 'Error',
                        message: 'Unable to update record. Please contact your system administrator.'
                    });
                }
            });
        } else {
            iziToast.warning({
                title: 'Caution',
                message: 'No Studio Id selected.',
                position: 'center'
            });
        }
    };

    function forgeryToken() {
        return kendo.antiForgeryTokens();
    }

    function onDataBound() {
        //position the add new button to the left.
        $(".k-grid-toolbar").addClass("text-left");
    }

    function onGridSave(e) {
        e.sender.one("dataBound", function () {
            e.sender.dataSource.read();
            reloadPage();
        });
    }

    function onSave(e) {
        var challengeScanProductId = $("#ChallengeScanProductId").data("kendoComboBox").value();
        console.log(challengeScanProductId);
        e.model.set("ChallengeScanProductId", challengeScanProductId);

        var individualScanProductId = $("#IndividualScanProductId").data("kendoComboBox").value();
        console.log(individualScanProductId);
        e.model.set("IndividualScanProductId", individualScanProductId);
    }

    function reloadPage() {
        location.reload(true);
    }

    function onClick() {
        if (siteId != 0) {
            $.ajax({
                type: "POST",
                url: "/GlobalAdmin/StudioLocations?handler=GenerateActivationCode&siteId=" + siteId,
                dataType: 'json',
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {
                    $('#ActivationCode').val(result.ActivationCode);
                    $('#ActivationLink').val(result.ActivationLink);

                    iziToast.success({
                        title: 'Success',
                        message: 'Activation code and link generated.',
                    });

                    var gridObject = $("#grdStudio").data("kendoGrid")
                    gridObject.dataSource.transport.options.read.url = "/GlobalAdmin/StudioLocations?handler=Read";
                    gridObject.dataSource.read();

                },
                error: function () {
                    iziToast.error({
                        title: 'Error',
                        message: 'Unable to request Activation Code',
                    });
                }
            });
        } else {
            iziToast.warning({
                title: 'Caution',
                message: 'Please provide Site Id to continue.',
                position: 'center'
            });
        }
    };
       

    function onEdit() {
        siteId = $("#SiteId").val();       

        var dropdownlist = $("#ChallengeScanProductId").data("kendoComboBox");
        dropdownlist.dataSource.transport.options.read.url = "/GlobalAdmin/StudioLocations?handler=ReadProducts&siteId=" + siteId;;
        dropdownlist.dataSource.read();

        var dropdownlist = $("#IndividualScanProductId").data("kendoComboBox");
        dropdownlist.dataSource.transport.options.read.url = "/GlobalAdmin/StudioLocations?handler=ReadProducts&siteId=" + siteId;;
        dropdownlist.dataSource.read();
    }       

    $(document).ready(function () {

        KendoWindowManager.InitKendoWindow();  

        $('#SiteId').change(function () {
            BindProducts($(this).val());
        });

        //var challengeScan = $("#ChallengeScanProductId").kendoDropDownList({
        //    autoBind: false,
        //    cascadeFrom: "SiteId",
        //    optionLabel: "Select product...",
        //    dataTextField: "Name",
        //    dataValueField: "ProductId",
        //    dataSource: {
        //        type: "odata",
        //        serverFiltering: true,
        //        transport: {
        //            read: "/GlobalAdmin/StudioLocations?handler=ReadProducts"
        //        },
        //        headers: {
        //                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
        //            }
        //    }
        //}).data("kendoDropDownList");

        //var individualScan = $("#IndividualScanProductId").kendoDropDownList({
        //    autoBind: false,
        //    cascadeFrom: "SiteId",
        //    optionLabel: "Select product...",
        //    dataTextField: "Name",
        //    dataValueField: "ProductId",
        //    dataSource: {
        //        type: "odata",
        //        serverFiltering: true,
        //        transport: {
        //            read: "/GlobalAdmin/StudioLocations?handler=ReadProducts"
        //        },
        //        headers: {
        //            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
        //        }
        //    }
        //}).data("kendoDropDownList");




    });

</script>

<style>
    div.k-edit-form-container {
        width: 500px;
        height: auto;
    }
</style>