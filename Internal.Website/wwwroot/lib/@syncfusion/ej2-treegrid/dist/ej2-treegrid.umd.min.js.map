{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        for (var i = 0; i < Object.keys(data).length; i++) {\n            var tempData = data[i];\n            this.hierarchyData.push(extend({}, tempData));\n            if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                this.taskIds.push(tempData[this.parent.idMapping]);\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args, index);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = _this.getRows();\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            var griddata = this.grid.getCurrentViewRecords()[index];\n            extend(griddata, data);\n            this.grid.editModule.updateRow(index, griddata);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (viewInfo.event === 'refresh-virtual-block') {\n                this.parent.refresh();\n            }\n            else {\n                this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","taskData","_loop_1","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplate","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","treeGrid","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","scrollHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y"],"mappings":"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"}