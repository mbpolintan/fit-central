{"version":3,"file":"ej2-progressbar.min.js","sources":["../../src/progressbar/utils/helper.js","../../src/progressbar/utils/theme.js","../../src/progressbar/model/progress-base.js","../../src/progressbar/model/constant.js","../../src/progressbar/model/annotation.js","../../src/progressbar/utils/progress-animation.js","../../src/progressbar/model/progress-annotation.js","../../src/progressbar/types/segment-progress.js","../../src/progressbar/types/linear-progress.js","../../src/progressbar/types/circular-progress.js","../../src/progressbar/progressbar.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\n/**\n * helper for progress bar\n */\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, height, width) {\n        this.x = x;\n        this.y = y;\n        this.height = height;\n        this.width = width;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar Size = /** @class */ (function () {\n    function Size(height, width) {\n        this.height = height;\n        this.width = width;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar Pos = /** @class */ (function () {\n    function Pos(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Pos;\n}());\nexport { Pos };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, width, color, opacity, rect, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, width, color, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        _this.stroke = (width !== 0 && _this.stroke !== '') ? color : 'transparent';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    document.body.appendChild(createElement('text', { id: 'chartmeasuretext' }));\n    element = document.getElementById('chartmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    remove(element);\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, fontSize, fontStyle, fontFamily, fontWeight, textAnchor, fill, x, y, width, height) {\n        this.id = id;\n        this['font-size'] = fontSize;\n        this['font-style'] = fontStyle;\n        this['font-family'] = fontFamily;\n        this['font-weight'] = fontWeight;\n        this['text-anchor'] = textAnchor;\n        this.fill = fill;\n        this.x = x;\n        this.y = y;\n        this.width = width ? width : 0;\n        this.height = height ? height : 0;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/** calculate the start and end point of circle */\nexport function degreeToLocation(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * (Math.PI / 180);\n    return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n    };\n}\n/** calculate the path of the circle */\nexport function getPathArc(x, y, radius, startAngle, endAngle, enableRtl, pieView) {\n    var start = degreeToLocation(x, y, radius, startAngle);\n    var end = degreeToLocation(x, y, radius, endAngle);\n    var largeArcFlag = '0';\n    var sweepFlag = (enableRtl) ? '0' : '1';\n    if (!enableRtl) {\n        largeArcFlag = ((endAngle >= startAngle) ? endAngle : endAngle + 360) - startAngle <= 180 ? '0' : '1';\n    }\n    else {\n        largeArcFlag = ((startAngle >= endAngle) ? startAngle : startAngle + 360) - endAngle <= 180 ? '0' : '1';\n    }\n    var d;\n    if (pieView) {\n        d = 'M ' + x + ' ' + y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' ' + ' 0 ' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y + ' ' + 'Z';\n    }\n    else {\n        d = 'M' + start.x + ' ' + start.y +\n            'A' + radius + ' ' + radius + ' ' + '0' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    return d;\n}\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/** @private */\n// tslint:disable-next-line\nexport function setAttributes(options, element) {\n    var keys = Object.keys(options);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], options[keys[i]]);\n    }\n    return element;\n}\n/**\n * Animation Effect Calculation\n * @private\n */\nexport function effect(currentTime, startValue, endValue, duration, enableRtl) {\n    var start = (enableRtl) ? endValue : -endValue;\n    var end = startValue + ((enableRtl) ? -endValue : endValue);\n    return start * Math.cos(currentTime / duration * (Math.PI / 2)) + end;\n}\n/**\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * @private\n */\nexport function removeElement(id) {\n    if (!id) {\n        return null;\n    }\n    var element = typeof id === 'string' ? getElement(id) : id;\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * @private\n */\nvar ProgressLocation = /** @class */ (function () {\n    function ProgressLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return ProgressLocation;\n}());\nexport { ProgressLocation };\n","/** @private */\n// tslint:disable-next-line:max-func-body-length\nexport function getProgressThemeColor(theme) {\n    var style;\n    switch (theme) {\n        case 'Material':\n            style = {\n                linearTrackColor: '#E3165B',\n                linearProgressColor: '#E3165B',\n                circularTrackColor: '#E3165B',\n                circularProgressColor: '#E3165B',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Roboto',\n                linearFontSize: '12',\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Roboto',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 0.26,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#4caf50',\n                danger: '#ff6652',\n                warning: '#ff9800',\n                info: '#03a9f4',\n            };\n            break;\n        case 'Bootstrap':\n            style = {\n                linearTrackColor: '#EEEEEE',\n                linearProgressColor: '#317ab9',\n                circularTrackColor: '#EEEEEE',\n                circularProgressColor: '#317ab9',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 20,\n                linearProgressThickness: 20,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                success: '#48b14c',\n                danger: '#d44f4f',\n                warning: '#fac168',\n                info: '#2aaac0',\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                linearTrackColor: '#E9ECEF',\n                linearProgressColor: '#007bff',\n                circularTrackColor: '#E9ECEF',\n                circularProgressColor: '#007bff',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Helvetica',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                success: '#28a745',\n                danger: '#dc3545',\n                warning: '#ffc107',\n                info: '#17a2b8',\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                linearTrackColor: '#BFBFBF',\n                linearProgressColor: '#FFD939',\n                circularTrackColor: '#BFBFBF',\n                circularProgressColor: '#FFD939',\n                backgroundColor: 'transparent',\n                fontColor: '#FFFFFF',\n                linearFontFamily: 'Segoe UI',\n                linearFontSize: '12',\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#2bc700',\n                danger: '#ff6161',\n                warning: '#ff7d1a',\n                info: '#66b0ff',\n            };\n            break;\n        default:\n            style = {\n                linearTrackColor: '#EAEAEA',\n                linearProgressColor: '#0078D6',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0078D6',\n                backgroundColor: 'transparent',\n                fontColor: '#333333',\n                linearFontFamily: 'Segoe UI',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.3,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#166600',\n                danger: '#b30900',\n                warning: '#944000',\n                info: '#0056b3',\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * progress bar complex interface\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in progressbar\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Far')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"text\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Animation\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(2000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Annotation\n */\nvar ProgressAnnotationSettings = /** @class */ (function (_super) {\n    __extends(ProgressAnnotationSettings, _super);\n    function ProgressAnnotationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ProgressAnnotationSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressAnnotationSettings.prototype, \"annotationAngle\", void 0);\n    __decorate([\n        Property('0%')\n    ], ProgressAnnotationSettings.prototype, \"annotationRadius\", void 0);\n    return ProgressAnnotationSettings;\n}(ChildProperty));\nexport { ProgressAnnotationSettings };\n/**\n * RangeColor\n */\nvar RangeColor = /** @class */ (function (_super) {\n    __extends(RangeColor, _super);\n    function RangeColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], RangeColor.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"end\", void 0);\n    return RangeColor;\n}(ChildProperty));\nexport { RangeColor };\n","/**\n * corner Radius\n */\nexport var lineCapRadius = 0.9;\n/**\n * complete Angle\n */\nexport var completeAngle = 359.99;\n/**\n * valueChanged event\n */\nexport var valueChanged = 'valueChanged';\n/**\n * progressCompleted event\n */\nexport var progressCompleted = 'progressCompleted';\n/**\n * mouseClick event\n */\nexport var mouseClick = 'mouseClick';\n/**\n * mouseDown event\n */\nexport var mouseDown = 'mouseDown';\n/**\n * mouseUp event\n */\nexport var mouseUp = 'mouseUp';\n/**\n * mouseMove event\n */\nexport var mouseMove = 'mouseMove';\n/**\n * mouseLeave event\n */\nexport var mouseLeave = 'mouseLeave';\n/**\n * svgLink\n */\nexport var svgLink = 'http://www.w3.org/2000/svg';\n/**\n * gradient type\n */\nexport var gradientType = 'linearGradient';\n/**\n * stop element\n */\nexport var stopElement = 'stop';\n","import { createElement } from '@syncfusion/ej2-base';\nimport { annotationRender, removeElement, ProgressLocation } from '../utils/helper';\n/**\n * Base file for annotation\n */\nvar AnnotationBase = /** @class */ (function () {\n    /**\n     * Constructor for progress annotation\n     * @param control\n     */\n    function AnnotationBase(control) {\n        this.control = control;\n    }\n    AnnotationBase.prototype.render = function (annotation, index) {\n        this.annotation = annotation;\n        var childElement = createElement('div', {\n            id: this.control.element.id + 'Annotation' + index,\n            styles: 'position:absolute;z-index:1', innerHTML: annotation.content\n        });\n        return childElement;\n    };\n    /**\n     * To process the annotation\n     * @param annotation\n     * @param index\n     * @param parentElement\n     */\n    AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n        var annotationElement;\n        var location;\n        location = new ProgressLocation(0, 0);\n        annotationElement = this.render(annotation, index);\n        if (annotationElement) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n        else if (this.control.redraw) {\n            removeElement(annotationElement.id);\n        }\n    };\n    AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n        var argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            var result = this.Location(this.annotation.annotationRadius, this.annotation.annotationAngle);\n            argsData.content.style.left = result.left + 'px';\n            argsData.content.style.top = result.top + 'px';\n            argsData.content.style.transform = 'translate(-50%, -50%)';\n            argsData.content.setAttribute('aria-label', 'Annotation');\n            parentElement.appendChild(argsData.content);\n        }\n    };\n    AnnotationBase.prototype.Location = function (radius, angle) {\n        var top;\n        var left;\n        var radius1 = parseFloat(radius);\n        if (radius1 === 0 && angle === 0) {\n            var rect = this.control.progressRect;\n            left = rect.x + (rect.width / 2);\n            top = rect.y + (rect.height / 2);\n        }\n        else {\n            var degToRadFactor = Math.PI / 180;\n            angle = angle - 90;\n            angle = angle * degToRadFactor;\n            var x = Math.round(this.control.progressSize.width / 2.25);\n            var y = Math.round(this.control.progressSize.height / 2.25);\n            left = (radius1 * Math.cos(angle)) + x;\n            top = (radius1 * Math.sin(angle)) + y;\n        }\n        return {\n            top: top, left: left\n        };\n    };\n    return AnnotationBase;\n}());\nexport { AnnotationBase };\n","import { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { effect, getPathArc } from '../utils/helper';\nimport { lineCapRadius, completeAngle } from '../model/constant';\n/**\n * Animation for progress bar\n */\nvar ProgressAnimation = /** @class */ (function () {\n    function ProgressAnimation() {\n    }\n    /** Linear Animation */\n    ProgressAnimation.prototype.doLinearAnimation = function (element, progress, delay, previousWidth, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        var width = linearPath.getAttribute('width');\n        var x = linearPath.getAttribute('x');\n        var opacityValue = 0;\n        var value = 0;\n        var start = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? previousWidth : parseInt(x, 10);\n        var end = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? parseInt(width, 10) - start :\n            parseInt(width, 10) - previousWidth;\n        var rtlX = parseInt(x, 10) - end;\n        linearPath.style.visibility = 'hidden';\n        animation.animate(linearPath, {\n            duration: duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), parseInt(x, 10), parseInt(width, 10), true);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, true);\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), 0, parseInt(width, 10), false);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                    }\n                }\n            },\n            end: function (model) {\n                progress.cancelResize = false;\n                linearPath.style.visibility = '';\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (progress.isActive) {\n                        linearPath.setAttribute('x', x.toString());\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                    else {\n                        linearPath.setAttribute('x', rtlX.toString());\n                    }\n                }\n                else {\n                    linearPath.setAttribute('width', width);\n                    if (progress.isActive) {\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /** Linear Indeterminate */\n    ProgressAnimation.prototype.doLinearIndeterminate = function (element, progressWidth, thickness, progress, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var x = linearPath.getAttribute('x');\n        var width = linearPath.getAttribute('width');\n        var value = 0;\n        var start = (width) ? -(parseInt(width, 10)) : -progressWidth;\n        var end = (progress.progressRect.x + progress.progressRect.width) + ((width) ? (parseInt(width, 10)) : progressWidth);\n        var duration = (!progress.enableProgressSegments) ? 2500 : 3500;\n        animation.animate(clipPath, {\n            duration: duration,\n            delay: 0,\n            progress: function (args) {\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    value = effect(args.timeStamp, parseInt(x, 10) || progress.progressRect.x + progressWidth, end, args.duration, true);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n                else {\n                    value = effect(args.timeStamp, start, end, args.duration, false);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n            },\n            end: function () {\n                if (progress.enableRtl && !progress.enableProgressSegments && !(progress.cornerRadius === 'Round4px')) {\n                    linearPath.setAttribute('x', x.toString());\n                }\n                else if (!progress.enableProgressSegments) {\n                    linearPath.setAttribute('x', start.toString());\n                }\n                if (!progress.destroyIndeterminate) {\n                    _this.doLinearIndeterminate(element, progressWidth, thickness, progress, clipPath);\n                }\n            }\n        });\n    };\n    /** Linear striped */\n    ProgressAnimation.prototype.doStripedAnimation = function (element, progress, value, delay) {\n        var _this = this;\n        var animation = new Animation({});\n        var point = 1000 / progress.animation.duration;\n        animation.animate(element, {\n            duration: progress.animation.duration,\n            delay: progress.animation.delay,\n            progress: function () {\n                value += (progress.enableRtl) ? -point : point;\n                element.setAttribute('gradientTransform', 'translate(' + value + ') rotate(-45)');\n            },\n            end: function () {\n                if (!progress.destroyIndeterminate) {\n                    _this.doStripedAnimation(element, progress, value, false);\n                }\n            }\n        });\n    };\n    /** Circular animation */\n    ProgressAnimation.prototype.doCircularAnimation = function (x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var circularPath = element;\n        var start = progress.startAngle;\n        var pathRadius = radius + (thickness / 2);\n        var end = 0;\n        var opacityValue = 0;\n        var startPos;\n        var endPos;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        start += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n        totalEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            (lineCapRadius / 2) * thickness : 0;\n        progressEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? -(lineCapRadius / 2) * thickness : (lineCapRadius / 2) * thickness) : 0;\n        startPos = (!isNullOrUndefined(startValue)) ? startValue : start;\n        endPos = (!isNullOrUndefined(startValue)) ? totalEnd - previousTotal : totalEnd;\n        circularPath.setAttribute('visibility', 'Hidden');\n        animation.animate(circularPath, {\n            duration: duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (args.timeStamp >= args.delay) {\n                    circularPath.setAttribute('visibility', 'visible');\n                    if (progress.isActive) {\n                        end = _this.activeAnimate((args.timeStamp / args.duration), startPos, endPos, progress.enableRtl);\n                        opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                        active.setAttribute('opacity', opacityValue.toString());\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                    else {\n                        end = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                }\n            },\n            end: function (model) {\n                progress.cancelResize = false;\n                circularPath.setAttribute('visibility', '');\n                circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, progressEnd, progress.enableRtl, true));\n                if (progress.isActive) {\n                    _this.doCircularAnimation(x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active);\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /** Circular indeterminate */\n    ProgressAnimation.prototype.doCircularIndeterminate = function (circularProgress, progress, start, end, x, y, radius, thickness, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var pathRadius = radius + ((!progress.enableProgressSegments) ? (thickness / 2) : 0);\n        var value = (!progress.enableProgressSegments) ? 3 : 2;\n        animation.animate(clipPath, {\n            progress: function () {\n                circularProgress.style.visibility = 'visible';\n                start += (progress.enableRtl) ? -value : value;\n                end += (progress.enableRtl) ? -value : value;\n                circularProgress.setAttribute('d', getPathArc(x, y, pathRadius, start % 360, end % 360, progress.enableRtl, !progress.enableProgressSegments));\n            },\n            end: function (model) {\n                if (!progress.destroyIndeterminate) {\n                    _this.doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius, thickness, clipPath);\n                }\n            }\n        });\n    };\n    /** To do the label animation for progress bar */\n    ProgressAnimation.prototype.doLabelAnimation = function (labelPath, start, end, progress, delay, textSize) {\n        var animation = new Animation({});\n        var label = new Animation({});\n        var startPos;\n        var endPos;\n        var text = labelPath.innerHTML;\n        var value = 0;\n        var xPos = 0;\n        var valueChanged = 0;\n        var percentage = 100;\n        var labelText = progress.labelStyle.text;\n        var labelPos = progress.labelStyle.textAlignment;\n        var posX = parseInt(labelPath.getAttribute('x'), 10);\n        labelPath.setAttribute('visibility', 'Hidden');\n        if (progress.type === 'Linear') {\n            startPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width) + (textSize / 2) :\n                progress.progressRect.x - (textSize / 2);\n            startPos = (startPos <= 0) ? 0 : startPos;\n            endPos = (progress.enableRtl) ? startPos - posX : posX - startPos;\n        }\n        animation.animate(labelPath, {\n            duration: progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (progress.type === 'Linear') {\n                    if (args.timeStamp >= args.delay) {\n                        if (labelText === '') {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            valueChanged = parseInt(((value / progress.progressRect.width) * percentage).toString(), 10);\n                            labelPath.innerHTML = valueChanged.toString() + '%';\n                            if (labelPos === 'Far' || labelPos === 'Center') {\n                                xPos = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                                labelPath.setAttribute('x', xPos.toString());\n                            }\n                        }\n                    }\n                }\n                else if (progress.type === 'Circular') {\n                    if (labelText === '') {\n                        labelPath.setAttribute('visibility', 'visible');\n                        value = effect(args.timeStamp, start, end, args.duration, false);\n                        valueChanged = parseInt((((value - start) / progress.totalAngle) * percentage).toString(), 10);\n                        labelPath.innerHTML = valueChanged.toString() + '%';\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                if (labelText === '') {\n                    labelPath.innerHTML = text;\n                    labelPath.setAttribute('x', posX.toString());\n                }\n                else {\n                    label.animate(labelPath, {\n                        progress: function (args) {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, 0, 1, args.duration, false);\n                            labelPath.setAttribute('opacity', value.toString());\n                        },\n                        end: function () {\n                            labelPath.setAttribute('opacity', '1');\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /** To do the annotation animation for circular progress bar */\n    ProgressAnimation.prototype.doAnnotationAnimation = function (circularPath, progress, previousEnd, previousTotal) {\n        var animation = new Animation({});\n        var value = 0;\n        var percentage = 100;\n        var isAnnotation = progress.annotations.length > 0;\n        var annotatElementChanged;\n        var firstAnnotatElement;\n        var start = progress.startAngle;\n        var totalAngle = progress.totalAngle;\n        var totalEnd;\n        var annotateValueChanged;\n        var annotateValue;\n        var startValue;\n        var endValue;\n        if (isAnnotation && progress.progressAnnotationModule) {\n            firstAnnotatElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n            if (firstAnnotatElement && firstAnnotatElement.children[0]) {\n                if (firstAnnotatElement.children[0].tagName === 'SPAN') {\n                    annotatElementChanged = firstAnnotatElement.children[0];\n                }\n            }\n        }\n        totalEnd = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n        progress.annotateTotal = totalEnd =\n            (progress.argsData.value < progress.minimum || progress.argsData.value > progress.maximum) ? 0 : totalEnd;\n        progress.annotateEnd = start + totalEnd;\n        annotateValue = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        annotateValue = (progress.argsData.value < progress.minimum || progress.argsData.value > progress.maximum) ? 0 :\n            Math.round(annotateValue);\n        startValue = (!isNullOrUndefined(previousEnd)) ? previousEnd : start;\n        endValue = (!isNullOrUndefined(previousEnd)) ? totalEnd - previousTotal : totalEnd;\n        if (progress.argsData.value <= progress.minimum || progress.argsData.value > progress.maximum) {\n            annotatElementChanged.innerHTML = annotateValue + '%';\n        }\n        else {\n            animation.animate(circularPath, {\n                duration: progress.animation.duration,\n                delay: progress.animation.delay,\n                progress: function (args) {\n                    progress.cancelResize = true;\n                    if (isAnnotation && annotatElementChanged) {\n                        value = effect(args.timeStamp, startValue, endValue, args.duration, false);\n                        annotateValueChanged = parseInt((((Math.round(value) - start) / totalAngle) * percentage).toString(), 10);\n                        annotatElementChanged.innerHTML = annotateValueChanged ? annotateValueChanged.toString() + '%' : '0%';\n                    }\n                },\n                end: function (model) {\n                    progress.cancelResize = false;\n                    annotatElementChanged.innerHTML = annotateValue + '%';\n                }\n            });\n        }\n    };\n    ProgressAnimation.prototype.activeAnimate = function (t, start, end, enableRtl) {\n        var time = 1 - Math.pow(1 - t, 3);\n        var attrValue = start + ((!enableRtl) ? (time * end) : -(time * end));\n        return attrValue;\n    };\n    return ProgressAnimation;\n}());\nexport { ProgressAnimation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement } from '@syncfusion/ej2-base';\nimport { AnnotationBase } from './annotation';\nimport { ProgressAnimation } from '../utils/progress-animation';\n/**\n * Class for progress annotation\n */\nvar ProgressAnnotation = /** @class */ (function (_super) {\n    __extends(ProgressAnnotation, _super);\n    /**\n     * Constructor for ProgressBar annotation\n     * @private\n     */\n    function ProgressAnnotation(control, annotations) {\n        var _this = _super.call(this, control) || this;\n        _this.animation = new ProgressAnimation();\n        _this.progress = control;\n        _this.annotations = annotations;\n        return _this;\n    }\n    /**\n     * Method to render the annotation for ProgressBar\n     * @param element\n     * @private\n     */\n    ProgressAnnotation.prototype.renderAnnotations = function (element) {\n        var _this = this;\n        this.annotations = this.progress.annotations;\n        var parentElement = document.getElementById(this.progress.element.id + 'Annotation_collections');\n        this.parentElement = parentElement ? parentElement : createElement('div', {\n            id: this.progress.element.id + 'Annotation_collections',\n            styles: 'position:absolute'\n        });\n        this.annotations.map(function (annotation, index) {\n            _this.processAnnotation(annotation, index, _this.parentElement);\n        });\n        if (!parentElement) {\n            element.appendChild(this.parentElement);\n        }\n        if (this.progress.animation.enable && !this.progress.isIndeterminate) {\n            this.animation.doAnnotationAnimation(this.progress.clipPath, this.progress);\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ProgressAnnotation.prototype.getModuleName = function () {\n        return 'ProgressAnnotation';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.destroy = function (control) {\n        // Destroy method performed here\n    };\n    return ProgressAnnotation;\n}(AnnotationBase));\nexport { ProgressAnnotation };\n","import { lineCapRadius, completeAngle } from '../model/constant';\nimport { getPathArc, degreeToLocation } from '../utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * Progressbar Segment\n */\nvar Segment = /** @class */ (function () {\n    function Segment() {\n    }\n    /** To render the linear segment */\n    Segment.prototype.createLinearSegment = function (progress, id, width, opacity, thickness, progressWidth) {\n        var locX = (progress.enableRtl) ? ((progress.cornerRadius === 'Round') ?\n            (progress.progressRect.x + progress.progressRect.width) - ((lineCapRadius / 2) * thickness) :\n            (progress.progressRect.x + progress.progressRect.width)) :\n            ((progress.cornerRadius === 'Round') ? (progress.progressRect.x + (lineCapRadius / 2) * thickness) : progress.progressRect.x);\n        var locY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var avlWidth = progressWidth / progress.segmentCount;\n        var avlSegWidth = (progressWidth - ((progress.segmentCount - 1) * gapWidth));\n        avlSegWidth = (avlSegWidth -\n            ((progress.cornerRadius === 'Round') ? progress.segmentCount * (lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var gap = (progress.cornerRadius === 'Round') ? (gapWidth + (lineCapRadius * thickness)) : gapWidth;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var count = Math.ceil(width / avlWidth);\n        var segWidth;\n        var color;\n        var j = 0;\n        var option;\n        var segmentPath;\n        var tolWidth = (progress.cornerRadius === 'Round') ? (width - (lineCapRadius * thickness)) : width;\n        var linearThickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segWidth = (tolWidth < avlSegWidth) ? tolWidth : avlSegWidth;\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', linearThickness, color, opacity, '0', this.getLinearSegmentPath(locX, locY, segWidth, progress.enableRtl));\n            segmentPath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                segmentPath.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(segmentPath);\n            locX += (progress.enableRtl) ? -avlSegWidth - gap : avlSegWidth + gap;\n            tolWidth -= avlSegWidth + gap;\n            tolWidth = (tolWidth < 0) ? 0 : tolWidth;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.getLinearSegmentPath = function (x, y, width, enableRtl) {\n        return 'M' + ' ' + x + ' ' + y + ' ' + 'L' + (x + ((enableRtl) ? -width : width)) + ' ' + y;\n    };\n    /** To render the circular segment */\n    Segment.prototype.createCircularSegment = function (progress, id, x, y, r, value, opacity, thickness, totalAngle, progressWidth) {\n        var start = progress.startAngle;\n        var end = this.widthToAngle(progress.minimum, progress.maximum, value, progress.totalAngle);\n        end -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var size = (progressWidth - ((progress.totalAngle === completeAngle) ? progress.segmentCount :\n            progress.segmentCount - 1) * (progress.gapWidth || progress.themeStyle.circularGapWidth));\n        size = (size -\n            ((progress.cornerRadius === 'Round') ?\n                (((progress.totalAngle === completeAngle) ?\n                    progress.segmentCount : progress.segmentCount - 1) * lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var avlTolEnd = this.widthToAngle(0, progressWidth, (progressWidth / progress.segmentCount), totalAngle);\n        avlTolEnd -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var avlEnd = this.widthToAngle(0, progressWidth, size, totalAngle);\n        var gap = this.widthToAngle(0, progressWidth, (progress.gapWidth || progress.themeStyle.circularGapWidth), totalAngle);\n        gap += (progress.cornerRadius === 'Round') ? this.widthToAngle(0, progressWidth, (lineCapRadius * thickness), totalAngle) : 0;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var gapCount = Math.floor(end / avlTolEnd);\n        var count = Math.ceil((end - gap * gapCount) / avlEnd);\n        var segmentPath;\n        var circularSegment;\n        var segmentEnd;\n        var avlSegEnd = (start + ((progress.enableRtl) ? -avlEnd : avlEnd)) % 360;\n        var color;\n        var j = 0;\n        var option;\n        var circularThickness = progress.progressThickness || progress.themeStyle.circularProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segmentEnd = (progress.enableRtl) ? ((progress.startAngle - end > avlSegEnd) ? progress.startAngle - end : avlSegEnd) :\n                ((progress.startAngle + end < avlSegEnd) ? progress.startAngle + end : avlSegEnd);\n            segmentPath = getPathArc(x, y, r, start, segmentEnd, progress.enableRtl);\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', circularThickness, color, opacity, '0', segmentPath);\n            circularSegment = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                circularSegment.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(circularSegment);\n            start = segmentEnd + ((progress.enableRtl) ? -gap : gap);\n            avlSegEnd += (progress.enableRtl) ? -avlEnd - gap : avlEnd + gap;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.widthToAngle = function (min, max, value, totalAngle) {\n        var angle = ((value - min) / (max - min)) * totalAngle;\n        return angle;\n    };\n    Segment.prototype.createLinearRange = function (totalWidth, progress) {\n        var posX = progress.progressRect.x + ((progress.enableRtl) ? progress.progressRect.width : 0);\n        var startY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var gradX = (progress.enableRtl) ? 0.1 : -0.1;\n        var gradient;\n        var validRange;\n        var rangePath;\n        var option;\n        var startPos;\n        var endPos;\n        var startX;\n        var endX;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            validRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startPos = totalWidth * progress.calculateProgressRange(range[i].start, rangeMin, rangeMax);\n            endPos = totalWidth * progress.calculateProgressRange(range[i].end, rangeMin, rangeMax);\n            startX = posX + ((progress.enableRtl) ? -startPos : startPos);\n            endX = posX + ((progress.enableRtl) ? -endPos : endPos);\n            startX = (validRange) ? ((progress.isGradient && i > 0) ? startX + gradX : startX) : posX;\n            endX = (validRange) ? endX : posX;\n            color = (progress.isGradient) ? 'url(#lineRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_LinearRange_' + i, 'none', thickness, color, opacity, '0', 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + endX + ' ' + startY);\n            rangePath = progress.renderer.drawPath(option);\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setLinearGradientColor(i, range[i].color, endColor, startX, endX, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.createCircularRange = function (centerX, centerY, radius, progress) {\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var start = progress.startAngle;\n        var tolAngle = this.widthToAngle(progress.minimum, progress.maximum, progress.value, progress.totalAngle);\n        var gradient;\n        var startAngle;\n        var endAngle;\n        var rangePath;\n        var isValidRange;\n        var option;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            isValidRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startAngle = this.widthToAngle(rangeMin, rangeMax, range[i].start, tolAngle);\n            endAngle = this.widthToAngle(rangeMin, rangeMax, range[i].end, tolAngle);\n            startAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -startAngle : startAngle)) % 360 : start;\n            endAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -endAngle : endAngle)) % 360 : start;\n            color = (progress.isGradient) ? 'url(#circleRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_CircularRange_' + i, 'none', thickness, color, opacity, '0', getPathArc(centerX, centerY, radius, startAngle, endAngle, progress.enableRtl));\n            rangePath = progress.renderer.drawPath(option);\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setCircularGradientColor(i, range[i].color, endColor, startAngle, endAngle, radius, centerX, centerY, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.setLinearGradientColor = function (id, startColor, endColor, start, end, progress) {\n        var linearGradient;\n        var option;\n        var stopColor = [];\n        option = { id: 'lineRangeGrad_' + id + '', x1: start.toString(), x2: end.toString() };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    Segment.prototype.setCircularGradientColor = function (id, startColor, endColor, start, end, rad, x, y, progress) {\n        var linearGradient;\n        var option;\n        var stopColor = [];\n        var pos1 = degreeToLocation(x, y, rad, start);\n        var pos2 = degreeToLocation(x, y, rad, end);\n        option = {\n            id: 'circleRangeGrad_' + id + '', x1: pos1.x.toString(), x2: pos2.x.toString(),\n            y1: pos1.y.toString(), y2: pos2.y.toString()\n        };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    return Segment;\n}());\nexport { Segment };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { TextOption, colorNameToHex, convertHexToColor, setAttributes } from '../utils/helper';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { Segment } from './segment-progress';\nimport { svgLink, gradientType, stopElement } from '../model/constant';\n/**\n * Progress Bar of type Linear\n */\nvar Linear = /** @class */ (function () {\n    function Linear(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /** To render the linear track  */\n    Linear.prototype.renderLinearTrack = function () {\n        var progress = this.progress;\n        var linearTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearTrackGroup' });\n        var linearTrack;\n        var option;\n        var thickness;\n        var stroke;\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        thickness = (progress.trackThickness || progress.themeStyle.linearTrackThickness);\n        stroke = (progress.argsData.trackColor || progress.themeStyle.linearTrackColor);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearTrack = this.createRoundCornerSegment('_LinearTrack_', stroke, thickness, true, 0, progress);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Lineartrack', stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, progress.progressRect.width, thickness, 4, ''));\n                linearTrack = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Lineartrack', 'none', thickness, stroke, progress.themeStyle.trackOpacity, '0', progress.getPathLine(progress.progressRect.x, progress.progressRect.width, thickness));\n            linearTrack = progress.renderer.drawPath(option);\n            progress.trackWidth = linearTrack.getTotalLength();\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                linearTrack.setAttribute('stroke-linecap', 'round');\n            }\n            if (progress.segmentCount > 1 && !this.isRange && !progress.enableProgressSegments) {\n                progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, thickness);\n                linearTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n        }\n        linearTrackGroup.appendChild(linearTrack);\n        progress.svgObject.appendChild(linearTrackGroup);\n    };\n    /** To render the linear progress  */\n    // tslint:disable-next-line:max-func-body-length\n    Linear.prototype.renderLinearProgress = function (refresh, previousWidth) {\n        if (previousWidth === void 0) { previousWidth = 0; }\n        var progress = this.progress;\n        var option;\n        var linearProgress;\n        var progressWidth;\n        var linearProgressWidth;\n        var clipPathLinear;\n        var clipPathIndeterminate;\n        var linearProgressGroup;\n        var animationdelay;\n        var thickness;\n        var stroke;\n        var segmentWidth;\n        var strippedStroke;\n        var ismaximum = (progress.value === progress.maximum);\n        progressWidth = progress.calculateProgressRange(progress.argsData.value);\n        progress.previousWidth = linearProgressWidth = progress.progressRect.width *\n            ((progress.isIndeterminate && !progress.enableProgressSegments) ? 1 : progressWidth);\n        if (!refresh) {\n            linearProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearProgressGroup' });\n        }\n        else {\n            linearProgressGroup = getElement(progress.element.id + '_LinearProgressGroup');\n        }\n        thickness = (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        stroke = (!progress.isStriped) ? this.checkingLinearProgressColor() : 'url(#' + progress.element.id + '_LinearStriped)';\n        if (progress.cornerRadius === 'Round4px') {\n            option = new PathOption(progress.element.id + '_Linearprogress', stroke, 0, 'none', progress.themeStyle.progressOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearProgressWidth, thickness, 4, (ismaximum || progress.isIndeterminate) ? '' : 'start'));\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearprogress', 'none', thickness, stroke, progress.themeStyle.progressOpacity, '0', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n        }\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = (!progress.enableProgressSegments) ? progress.segmentSize :\n            progress.calculateSegmentSize(progress.progressWidth, thickness);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderLinearBuffer(progress);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.cornerRadius === 'Round4px') {\n                if (progress.segmentCount > 1) {\n                    linearProgress = this.createRoundCornerSegment('_Linearprogress_', stroke, thickness, false, linearProgressWidth, progress, progress.themeStyle.progressOpacity);\n                }\n                else {\n                    linearProgress = progress.renderer.drawPath(option);\n                }\n            }\n            else {\n                if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                    segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                    linearProgress = this.segment.createLinearSegment(progress, '_LinearProgressSegment', linearProgressWidth, progress.themeStyle.progressOpacity, thickness, segmentWidth);\n                }\n                else if (this.isRange && !progress.isIndeterminate) {\n                    linearProgress = this.segment.createLinearRange(linearProgressWidth, progress);\n                }\n                else {\n                    if (!refresh) {\n                        linearProgress = progress.renderer.drawPath(option);\n                    }\n                    else {\n                        linearProgress = getElement(progress.element.id + '_Linearprogress');\n                        linearProgress.setAttribute('d', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n                        linearProgress.setAttribute('stroke', stroke);\n                    }\n                    if (progress.segmentCount > 1) {\n                        linearProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                    }\n                    if (progress.cornerRadius === 'Round' && progressWidth) {\n                        linearProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n            }\n            linearProgressGroup.appendChild(linearProgress);\n            if (progress.isStriped && !progress.isIndeterminate) {\n                strippedStroke = this.checkingLinearProgressColor();\n                this.renderLinearStriped(strippedStroke, linearProgressGroup, progress);\n            }\n            if (progress.isActive && !progress.isIndeterminate && !progress.isStriped) {\n                this.renderActiveState(linearProgressGroup, progressWidth, linearProgressWidth, thickness, refresh);\n            }\n            if (progress.animation.enable && !progress.isIndeterminate && !progress.isActive && !progress.isStriped) {\n                if ((progress.secondaryProgress !== null)) {\n                    animationdelay = progress.animation.delay + (this.bufferWidth - linearProgressWidth);\n                }\n                else {\n                    animationdelay = progress.animation.delay;\n                }\n                this.delay = animationdelay;\n                clipPathLinear = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                this.animation.doLinearAnimation(clipPathLinear, progress, animationdelay, refresh ? previousWidth : 0);\n            }\n            if (progress.isIndeterminate) {\n                clipPathIndeterminate = progress.createClipPath(progress.clipPath, (progress.enableProgressSegments) ? 1 : progressWidth, null, refresh, thickness, progress.enableProgressSegments);\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                this.animation.doLinearIndeterminate(((!progress.enableProgressSegments) ? clipPathIndeterminate : linearProgress), linearProgressWidth, thickness, progress, clipPathIndeterminate);\n            }\n            progress.svgObject.appendChild(linearProgressGroup);\n        }\n    };\n    /** To render the linear buffer */\n    Linear.prototype.renderLinearBuffer = function (progress) {\n        var linearBuffer;\n        var secondaryProgressWidth;\n        var clipPathBuffer;\n        var linearBufferGroup;\n        var linearBufferWidth;\n        var option;\n        var thickness;\n        var stroke;\n        var segmentWidth;\n        var ismaximum = (progress.secondaryProgress === progress.maximum);\n        secondaryProgressWidth = progress.calculateProgressRange(progress.secondaryProgress);\n        this.bufferWidth = linearBufferWidth = progress.progressRect.width * secondaryProgressWidth;\n        linearBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearBufferGroup' });\n        thickness = (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        stroke = this.checkingLinearProgressColor();\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearBuffer = this.createRoundCornerSegment('_Linearbuffer_', stroke, thickness, false, linearBufferWidth, progress, progress.themeStyle.bufferOpacity);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Linearbuffer', stroke, 0, 'none', progress.themeStyle.bufferOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearBufferWidth, thickness, 4, (ismaximum) ? '' : 'start'));\n                linearBuffer = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearbuffer', 'none', thickness, stroke, progress.themeStyle.bufferOpacity, '0', progress.getPathLine(progress.progressRect.x, linearBufferWidth, thickness));\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                linearBuffer = this.segment.createLinearSegment(progress, '_LinearBufferSegment', linearBufferWidth, progress.themeStyle.bufferOpacity, (progress.progressThickness || progress.themeStyle.linearProgressThickness), segmentWidth);\n            }\n            else {\n                linearBuffer = progress.renderer.drawPath(option);\n                if (progress.segmentCount > 1 && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-linecap', 'round');\n                }\n            }\n        }\n        linearBufferGroup.appendChild(linearBuffer);\n        if (progress.animation.enable) {\n            clipPathBuffer = progress.createClipPath(progress.bufferClipPath, secondaryProgressWidth, null, false, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n            linearBufferGroup.appendChild(progress.bufferClipPath);\n            linearBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doLinearAnimation(clipPathBuffer, progress, progress.animation.delay, 0);\n        }\n        progress.svgObject.appendChild(linearBufferGroup);\n    };\n    /** Render the Linear Label */\n    Linear.prototype.renderLinearLabel = function () {\n        var linearlabel;\n        var linearValue;\n        var posX;\n        var posY;\n        var argsData;\n        var textSize;\n        var labelValue;\n        var percentage = 100;\n        var option;\n        var defaultPos;\n        var far;\n        var center;\n        var pos;\n        var rgbValue;\n        var contrast;\n        var clipPath;\n        var linearLabelGroup;\n        var thickness = (this.progress.progressThickness || this.progress.themeStyle.linearProgressThickness);\n        var padding = 5;\n        var progress = this.progress;\n        var textAlignment = progress.labelStyle.textAlignment;\n        var labelText = progress.labelStyle.text;\n        var fontBackground = this.checkingLinearProgressColor();\n        var progressWidth = progress.progressRect.width * progress.calculateProgressRange(progress.value);\n        linearLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearLabelGroup' });\n        labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        linearValue = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : Math.round(labelValue);\n        // Checking the font color\n        rgbValue = convertHexToColor(colorNameToHex(fontBackground));\n        contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        argsData = {\n            cancel: false, text: labelText ? labelText : String(linearValue) + '%', color: progress.labelStyle.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle);\n            defaultPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - textSize.width / 2) :\n                (progress.progressRect.x + textSize.width / 2);\n            if (textAlignment === 'Near') {\n                posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n            }\n            else if (textAlignment === 'Center') {\n                center = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - progressWidth / 2) :\n                    (progress.progressRect.x + progressWidth / 2);\n                pos = (progress.enableRtl) ? (center <= defaultPos) : (center >= defaultPos);\n                if (pos) {\n                    posX = center;\n                }\n                else {\n                    posX = defaultPos;\n                }\n            }\n            else {\n                far = (progress.enableRtl) ?\n                    ((progress.progressRect.x + progress.progressRect.width - progressWidth) + textSize.width / 2) :\n                    (progress.progressRect.x + progressWidth - textSize.width / 2);\n                far += (progress.enableRtl) ? padding : -padding;\n                pos = (progress.enableRtl) ? (far <= defaultPos) : (far >= defaultPos);\n                if (pos) {\n                    posX = far;\n                }\n                else {\n                    posX = defaultPos;\n                }\n            }\n            if (this.progress.cornerRadius === 'Round4px') {\n                posY = progress.progressRect.y + (thickness / 2) + (textSize.height / 4);\n            }\n            else {\n                posY = progress.progressRect.y + (progress.progressRect.height / 2) + (textSize.height / 4);\n            }\n            option = new TextOption(progress.element.id + '_linearLabel', progress.labelStyle.size || progress.themeStyle.linearFontSize, progress.labelStyle.fontStyle || progress.themeStyle.linearFontStyle, progress.labelStyle.fontFamily || progress.themeStyle.linearFontFamily, progress.labelStyle.fontWeight, 'middle', argsData.color || ((contrast >= 128) ? 'black' : 'white'), posX, posY);\n            linearlabel = progress.renderer.createText(option, argsData.text);\n            linearLabelGroup.appendChild(linearlabel);\n            if (progress.animation.enable && !progress.isIndeterminate) {\n                clipPath = progress.renderer.createClipPath({ 'id': progress.element.id + '_clippathLabel' });\n                progress.createClipPath(clipPath, 1, null, false, (progress.progressThickness || progress.themeStyle.linearProgressThickness), true);\n                linearLabelGroup.appendChild(clipPath);\n                linearlabel.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathLabel)');\n                this.animation.doLabelAnimation(linearlabel, 0, progressWidth, progress, this.delay, textSize.width);\n            }\n            progress.svgObject.appendChild(linearLabelGroup);\n        }\n    };\n    /** To render a progressbar active state */\n    Linear.prototype.renderActiveState = function (progressGroup, progressWidth, linearProgressWidth, thickness, refresh) {\n        var linearActive;\n        var activeClip;\n        var progress = this.progress;\n        var option;\n        var ismaximum = (progress.value === progress.maximum);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearActive = this.createRoundCornerSegment('_LinearActiveProgress_', '#ffffff', thickness, false, linearProgressWidth, progress, 0.5);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', '#ffffff', 0, 'none', 0.5, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearProgressWidth, thickness, 4, ismaximum ? '' : 'start'));\n                linearActive = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', 'none', thickness, '#ffffff', 0.5, '', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n                linearActive = progress.renderer.drawPath(option);\n            }\n            else {\n                linearActive = getElement(progress.element.id + '_LinearActiveProgress');\n                linearActive.setAttribute('d', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n            }\n            if (progress.segmentCount > 1 && !this.isRange) {\n                linearActive.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && progressWidth && !this.isRange) {\n                linearActive.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        activeClip = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false);\n        linearActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(linearActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doLinearAnimation(activeClip, progress, 0, 0, linearActive);\n    };\n    /** To render a striped stroke */\n    Linear.prototype.renderLinearStriped = function (color, group, progress) {\n        var defs = progress.renderer.createDefs();\n        var linearGradient = document.createElementNS(svgLink, gradientType);\n        var stripWidth = 14;\n        var stop;\n        var gradOption;\n        var stopOption = [];\n        gradOption = {\n            id: progress.element.id + '_LinearStriped', x1: (progress.progressRect.x).toString(),\n            x2: (progress.progressRect.x + stripWidth).toString(),\n            spreadMethod: 'repeat', gradientUnits: 'userSpaceOnUse', gradientTransform: 'rotate(-45)'\n        };\n        stopOption = [{ offset: '50%', 'stop-color': color, 'stop-opacity': '1' },\n            { offset: '50%', 'stop-color': color, 'stop-opacity': '0.4' }];\n        linearGradient = setAttributes(gradOption, linearGradient);\n        for (var i = 0; i < stopOption.length; i++) {\n            stop = document.createElementNS(svgLink, stopElement);\n            stop = setAttributes(stopOption[i], stop);\n            linearGradient.appendChild(stop);\n        }\n        defs.appendChild(linearGradient);\n        group.appendChild(defs);\n        if (progress.animation.enable) {\n            this.animation.doStripedAnimation(linearGradient, progress, 0);\n        }\n    };\n    /** checking progress color */\n    Linear.prototype.checkingLinearProgressColor = function () {\n        var linearColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                linearColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                linearColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                linearColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                linearColor = progress.themeStyle.danger;\n                break;\n            default:\n                linearColor = (progress.argsData.progressColor || progress.themeStyle.linearProgressColor);\n        }\n        return linearColor;\n    };\n    /** Bootstrap 3 & Bootstrap 4 corner path */\n    Linear.prototype.cornerRadius = function (x, y, width, height, radius, pathtype) {\n        var path = '';\n        var endWidth = width;\n        var endRadius = radius;\n        switch (pathtype) {\n            case 'start':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n                break;\n            case 'end':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (endWidth - endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + endRadius + ',' + endRadius + ' '\n                    + 'v' + (height - 2 * endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + -endRadius + ',' + endRadius + ' '\n                    + 'h' + (radius - endWidth) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            case 'none':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            default:\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width - radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius + ' '\n                    + 'v' + (height - 2 * radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius + ' '\n                    + 'h' + (radius - width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n        }\n        return path;\n    };\n    /** Bootstrap 3 & Bootstrap 4 corner segment */\n    Linear.prototype.createRoundCornerSegment = function (id, stroke, thickness, isTrack, progressWidth, progress, opacity) {\n        var locX = progress.progressRect.x;\n        var locY = progress.progressRect.y;\n        var width = progress.progressRect.width;\n        var option;\n        var pathType;\n        var avlWidth;\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var segWidth = (width - ((progress.segmentCount - 1) * gapWidth)) / progress.segmentCount;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id + 'SegmentGroup' });\n        var segmentPath;\n        for (var i = 1; i <= progress.segmentCount; i++) {\n            if (i === 1 || i === progress.segmentCount) {\n                pathType = (i === 1) ? 'start' : 'end';\n            }\n            else {\n                pathType = 'none';\n            }\n            if (isTrack) {\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(locX, locY, segWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n            }\n            else {\n                avlWidth = (progressWidth < segWidth) ? progressWidth : segWidth;\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', opacity, '0', this.cornerRadius(locX, locY, avlWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n                progressWidth -= (segWidth + gapWidth);\n                if (progressWidth <= 0) {\n                    break;\n                }\n            }\n        }\n        return segmentGroup;\n    };\n    return Linear;\n}());\nexport { Linear };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getPathArc } from '../utils/helper';\nimport { Segment } from './segment-progress';\nimport { TextOption } from '../utils/helper';\n/**\n * Progressbar of type circular\n */\nvar Circular = /** @class */ (function () {\n    function Circular(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /** To render the circular track */\n    Circular.prototype.renderCircularTrack = function () {\n        var progress = this.progress;\n        var circularTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularTrackGroup' });\n        var radius;\n        var startAngle;\n        var endAngle;\n        var circularTrack;\n        var circularPath;\n        var option;\n        var fill;\n        var strokeWidth;\n        var stroke;\n        startAngle = progress.startAngle;\n        progress.totalAngle = (progress.endAngle - progress.startAngle) % 360;\n        progress.totalAngle = (progress.totalAngle <= 0 ? (360 + progress.totalAngle) : progress.totalAngle);\n        progress.totalAngle -= (progress.totalAngle === 360) ? 0.01 : 0;\n        this.trackEndAngle = endAngle = (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : +progress.totalAngle)) % 360;\n        this.centerX = progress.progressRect.x + (progress.progressRect.width / 2);\n        this.centerY = progress.progressRect.y + (progress.progressRect.height / 2);\n        this.maxThickness = Math.max(progress.trackThickness, progress.progressThickness) ||\n            Math.max(progress.themeStyle.circularProgressThickness, progress.themeStyle.circularTrackThickness);\n        this.availableSize = (Math.min(progress.progressRect.height, progress.progressRect.width) / 2) - this.maxThickness / 2;\n        radius = stringToNumber(progress.radius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        stroke = (progress.argsData.trackColor || progress.themeStyle.circularTrackColor);\n        fill = (progress.enablePieProgress) ? (progress.argsData.trackColor || progress.themeStyle.circularTrackColor) : 'none';\n        strokeWidth = (progress.enablePieProgress) ? 0 : (progress.trackThickness || progress.themeStyle.circularTrackThickness);\n        circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        option = new PathOption(progress.element.id + '_Circulartrack', fill, strokeWidth, stroke, progress.themeStyle.trackOpacity, '0', circularPath);\n        circularTrack = progress.renderer.drawPath(option);\n        progress.trackWidth = circularTrack.getTotalLength();\n        if (progress.segmentCount > 1 && !progress.enableProgressSegments && !progress.enablePieProgress && !this.isRange) {\n            progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, strokeWidth);\n            circularTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round' && !progress.enablePieProgress && !this.isRange) {\n            circularTrack.setAttribute('stroke-linecap', 'round');\n        }\n        circularTrackGroup.appendChild(circularTrack);\n        progress.svgObject.appendChild(circularTrackGroup);\n    };\n    /** To render the circular progress */\n    Circular.prototype.renderCircularProgress = function (previousEnd, previousTotalEnd, refresh) {\n        var progress = this.progress;\n        var startAngle = progress.startAngle;\n        var endAngle;\n        var totalAngle;\n        var radius;\n        var previousPath;\n        var progressTotalAngle;\n        var circularPath;\n        var progressEnd;\n        var circularProgress;\n        var option;\n        var linearClipPath;\n        var stroke;\n        var circularProgressGroup;\n        var fill;\n        var strokeWidth;\n        var segmentWidth;\n        var progressEndAngle;\n        var thickness;\n        if (!refresh) {\n            circularProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularProgressGroup' });\n        }\n        else {\n            circularProgressGroup = getElement(progress.element.id + '_CircularProgressGroup');\n        }\n        radius = stringToNumber(progress.innerRadius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        progress.previousTotalEnd = progressEnd = progress.calculateProgressRange(progress.argsData.value);\n        progressEndAngle = (progress.startAngle + ((progress.enableRtl) ? -progressEnd : progressEnd)) % 360;\n        progress.previousEndAngle = endAngle = ((progress.isIndeterminate && !progress.enableProgressSegments) ? (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : progress.totalAngle)) % 360 : progressEndAngle);\n        progressTotalAngle = (progressEnd - progress.startAngle) % 360;\n        progressTotalAngle = (progressTotalAngle <= 0 ? (360 + progressTotalAngle) : progressTotalAngle);\n        progressTotalAngle -= (progressTotalAngle === 360) ? 0.01 : 0;\n        circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        stroke = this.checkingCircularProgressColor();\n        fill = (progress.enablePieProgress) ? stroke : 'none';\n        thickness = (progress.progressThickness || progress.themeStyle.circularProgressThickness);\n        strokeWidth = (progress.enablePieProgress) ? 0 : thickness;\n        option = new PathOption(progress.element.id + '_Circularprogress', fill, strokeWidth, stroke, progress.themeStyle.progressOpacity, '0', circularPath);\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = this.validateSegmentSize(progress, thickness);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderCircularBuffer(progress, radius, progressTotalAngle);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress) {\n                totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                circularProgress = this.segment.createCircularSegment(progress, '_CircularProgressSegment', this.centerX, this.centerY, radius, progress.argsData.value, progress.themeStyle.progressOpacity, thickness, totalAngle, segmentWidth);\n            }\n            else if (this.isRange && !progress.isIndeterminate) {\n                circularProgress = this.segment.createCircularRange(this.centerX, this.centerY, radius, progress);\n            }\n            else {\n                if (!refresh) {\n                    circularProgress = progress.renderer.drawPath(option);\n                }\n                else {\n                    circularProgress = getElement(progress.element.id + '_Circularprogress');\n                    previousPath = circularProgress.getAttribute('d');\n                    circularProgress.setAttribute('stroke', stroke);\n                    circularProgress.setAttribute('d', circularPath);\n                }\n                if (progress.segmentCount > 1 && !progress.enablePieProgress) {\n                    circularProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && startAngle !== endAngle) {\n                    circularProgress.setAttribute('stroke-linecap', 'round');\n                }\n            }\n            circularProgressGroup.appendChild(circularProgress);\n            if (progress.isActive && !progress.isIndeterminate && !progress.enablePieProgress) {\n                this.renderActiveState(circularProgressGroup, radius, strokeWidth, circularPath, progressEndAngle, progressEnd, refresh);\n            }\n            if (progress.animation.enable || progress.isIndeterminate) {\n                this.delay = (progress.secondaryProgress !== null) ? 300 : progress.animation.delay;\n                linearClipPath = progress.createClipPath(progress.clipPath, null, refresh ? previousPath : '', refresh);\n                circularProgressGroup.appendChild(progress.clipPath);\n                if (progress.animation.enable && !progress.isIndeterminate && !progress.isActive) {\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                    this.animation.doCircularAnimation(this.centerX, this.centerY, radius, progressEndAngle, progressEnd, linearClipPath, progress, thickness, this.delay, refresh ? previousEnd : null, refresh ? previousTotalEnd : null);\n                }\n                if (progress.isIndeterminate) {\n                    if (progress.enableProgressSegments) {\n                        linearClipPath.setAttribute('d', getPathArc(this.centerX, this.centerY, radius + (thickness / 2), progress.startAngle, this.trackEndAngle, progress.enableRtl, true));\n                    }\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                    this.animation.doCircularIndeterminate((!progress.enableProgressSegments) ? linearClipPath : circularProgress, progress, startAngle, progressEndAngle, this.centerX, this.centerY, radius, thickness, linearClipPath);\n                }\n            }\n            progress.svgObject.appendChild(circularProgressGroup);\n        }\n    };\n    /** To render the circular buffer */\n    Circular.prototype.renderCircularBuffer = function (progress, radius, progressTotalAngle) {\n        var bufferClipPath;\n        var bufferEnd;\n        var circularBuffer;\n        var circularBufferGroup;\n        var circularPath;\n        var option;\n        var fill;\n        var strokeWidth;\n        var segmentWidth;\n        var totalAngle;\n        var endAngle;\n        var stroke;\n        circularBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_ CircularBufferGroup' });\n        bufferEnd = progress.calculateProgressRange(progress.secondaryProgress);\n        endAngle = (progress.startAngle + ((progress.enableRtl) ? -bufferEnd : bufferEnd)) % 360;\n        circularPath = getPathArc(this.centerX, this.centerY, radius, progress.startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        stroke = this.checkingCircularProgressColor();\n        fill = (progress.enablePieProgress) ? stroke : 'none';\n        strokeWidth = (progress.enablePieProgress) ? 0 : (progress.progressThickness || progress.themeStyle.circularProgressThickness);\n        option = new PathOption(progress.element.id + '_Circularbuffer', fill, strokeWidth, stroke, progress.themeStyle.bufferOpacity, '0', circularPath);\n        if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress && !this.isRange) {\n            totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n            segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n            circularBuffer = this.segment.createCircularSegment(progress, '_CircularBufferSegment', this.centerX, this.centerY, radius, progress.secondaryProgress, progress.themeStyle.bufferOpacity, strokeWidth, totalAngle, segmentWidth);\n        }\n        else {\n            circularBuffer = progress.renderer.drawPath(option);\n            if (progress.segmentCount > 1 && !progress.enablePieProgress && !this.isRange) {\n                circularBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                circularBuffer.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        circularBufferGroup.appendChild(circularBuffer);\n        if (progress.animation.enable && !progress.isActive) {\n            bufferClipPath = progress.createClipPath(progress.bufferClipPath, null, '', false);\n            circularBufferGroup.appendChild(progress.bufferClipPath);\n            circularBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, bufferEnd, bufferClipPath, progress, (progress.progressThickness || progress.themeStyle.circularProgressThickness), progress.animation.delay);\n        }\n        progress.svgObject.appendChild(circularBufferGroup);\n    };\n    /** To render the circular Label */\n    Circular.prototype.renderCircularLabel = function () {\n        var end;\n        var circularLabel;\n        var circularValue;\n        var centerY;\n        var argsData;\n        var textSize;\n        var labelValue;\n        var option;\n        var circularLabelGroup;\n        var percentage = 100;\n        var progress = this.progress;\n        var labelText = progress.labelStyle.text;\n        circularLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularLabelGroup' });\n        if (document.getElementById(circularLabelGroup.id)) {\n            document.getElementById(circularLabelGroup.id).remove();\n        }\n        labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        circularValue = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : Math.round(labelValue);\n        argsData = {\n            cancel: false, text: labelText ? labelText : String(circularValue) + '%', color: progress.labelStyle.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle);\n            centerY = this.centerY + (textSize.height / 2);\n            option = new TextOption(progress.element.id + '_circularLabel', progress.labelStyle.size || progress.themeStyle.circularFontSize, progress.labelStyle.fontStyle || progress.themeStyle.circularFontStyle, progress.labelStyle.fontFamily || progress.themeStyle.circularFontFamily, progress.labelStyle.fontWeight, 'middle', argsData.color || progress.themeStyle.fontColor, this.centerX, centerY, progress.progressRect.width, progress.progressRect.height);\n            circularLabel = progress.renderer.createText(option, argsData.text);\n            circularLabelGroup.appendChild(circularLabel);\n            if (progress.animation.enable && !progress.isIndeterminate) {\n                end = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n                end = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : end;\n                this.animation.doLabelAnimation(circularLabel, progress.startAngle, end, progress, this.delay);\n            }\n            progress.svgObject.appendChild(circularLabelGroup);\n        }\n    };\n    /** To render a progressbar active state */\n    Circular.prototype.renderActiveState = function (progressGroup, radius, strokeWidth, circularPath, endAngle, totalEnd, refresh) {\n        var circularActive;\n        var activeClip;\n        var option;\n        var progress = this.progress;\n        var thickness = strokeWidth + 1;\n        if (!refresh) {\n            option = new PathOption(progress.element.id + '_CircularActiveProgress', 'none', thickness, '#ffffff', 0.5, '0', circularPath);\n            circularActive = progress.renderer.drawPath(option);\n        }\n        else {\n            circularActive = getElement(progress.element.id + '_CircularActiveProgress');\n            circularActive.setAttribute('d', circularPath);\n        }\n        if (progress.segmentCount > 1) {\n            circularActive.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round') {\n            circularActive.setAttribute('stroke-linecap', 'round');\n        }\n        activeClip = progress.createClipPath(progress.clipPath, null, '', refresh);\n        circularActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(circularActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, totalEnd, activeClip, progress, thickness, 0, null, null, circularActive);\n    };\n    /** Checking the segment size */\n    Circular.prototype.validateSegmentSize = function (progress, thickness) {\n        var validSegment;\n        var rDiff;\n        var progressSegment;\n        rDiff = parseInt(progress.radius, 10) - parseInt(progress.innerRadius, 10);\n        if (rDiff !== 0 && !progress.enableProgressSegments) {\n            progressSegment = progress.trackWidth + ((rDiff < 0) ? (progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10) :\n                -(progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10));\n            validSegment = progress.calculateSegmentSize(progressSegment, thickness);\n        }\n        else if (progress.enableProgressSegments) {\n            validSegment = progress.calculateSegmentSize(progress.progressWidth, thickness);\n        }\n        else {\n            validSegment = progress.segmentSize;\n        }\n        return validSegment;\n    };\n    /** checking progress color */\n    Circular.prototype.checkingCircularProgressColor = function () {\n        var circularColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                circularColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                circularColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                circularColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                circularColor = progress.themeStyle.danger;\n                break;\n            default:\n                circularColor = (progress.argsData.progressColor || progress.themeStyle.circularProgressColor);\n        }\n        return circularColor;\n    };\n    return Circular;\n}());\nexport { Circular };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Browser, Complex, Event, Collection, EventHandler } from '@syncfusion/ej2-base';\nimport { createElement, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, Size, RectOption, stringToNumber } from './utils/helper';\nimport { Margin, Animation, Font, RangeColor } from './model/progress-base';\nimport { SvgRenderer, PathOption, getElement } from '@syncfusion/ej2-svg-base';\nimport { getProgressThemeColor } from './utils/theme';\nimport { lineCapRadius, completeAngle, valueChanged, progressCompleted } from './model/constant';\nimport { mouseClick, mouseDown, mouseLeave, mouseMove, mouseUp } from './model/constant';\nimport { ProgressAnnotationSettings } from './model/index';\nimport { Linear } from './types/linear-progress';\nimport { Circular } from './types/circular-progress';\nimport { ProgressAnimation } from './utils/progress-animation';\n/**\n *  progress bar control\n */\nvar ProgressBar = /** @class */ (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.linear = new Linear(_this);\n        /** @private */\n        _this.circular = new Circular(_this);\n        /** @private */\n        _this.annotateAnimation = new ProgressAnimation();\n        /** @private */\n        _this.destroyIndeterminate = false;\n        return _this;\n    }\n    ProgressBar.prototype.getModuleName = function () {\n        return 'progressbar';\n    };\n    ProgressBar.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        // tslint:disable-next-line\n        this.isBlazor = window[blazor];\n        this.unWireEvents();\n        this.initPrivateVariable();\n        this.wireEvents();\n    };\n    ProgressBar.prototype.initPrivateVariable = function () {\n        this.progressRect = new Rect(0, 0, 0, 0);\n        this.progressSize = new Size(0, 0);\n    };\n    ProgressBar.prototype.render = function () {\n        var _this = this;\n        this.trigger('load', { progressBar: this.isBlazor ? {} : this });\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n        this.calculateProgressBarSize();\n        this.setTheme();\n        this.createSVG();\n        this.argsData = { value: this.value, progressColor: this.progressColor, trackColor: this.trackColor };\n        if (this.argsData.value === this.maximum) {\n            this.trigger(progressCompleted, this.argsData, function () { _this.controlRendering(); });\n        }\n        else {\n            this.trigger(valueChanged, this.argsData, function () { _this.controlRendering(); });\n        }\n    };\n    ProgressBar.prototype.controlRendering = function () {\n        this.renderElements();\n        this.trigger('loaded', { progressBar: this.isBlazor ? {} : this });\n        this.renderComplete();\n        this.controlRenderedTimeStamp = new Date().getTime();\n    };\n    /**\n     * calculate size of the progress bar\n     */\n    ProgressBar.prototype.calculateProgressBarSize = function () {\n        var containerWidth = this.element.clientWidth || this.element.offsetWidth;\n        var containerHeight = this.element.clientHeight;\n        var width = (this.type === 'Linear') ? 200 : 120;\n        var height = (this.type === 'Linear') ? 30 : 120;\n        var padding = 10;\n        var thickness = Math.max(this.progressThickness, this.trackThickness);\n        height = (this.type === 'Linear' && thickness > (height - padding)) ? thickness + padding : height;\n        this.progressSize.width = stringToNumber(this.width, containerWidth) || containerWidth || width;\n        this.progressSize.height = stringToNumber(this.height, containerHeight) || containerHeight || height;\n        this.progressRect.x = this.margin.left;\n        this.progressRect.y = this.margin.top;\n        this.progressRect.width = this.progressSize.width - (this.margin.left + this.margin.right);\n        this.progressRect.height = this.progressSize.height - (this.margin.top + this.margin.bottom);\n    };\n    /**\n     * Render Annotation\n     */\n    ProgressBar.prototype.renderAnnotations = function () {\n        this.createSecElement();\n        this.renderAnnotation();\n        this.setSecondaryElementPosition();\n    };\n    /**\n     * Render SVG Element\n     */\n    ProgressBar.prototype.renderElements = function () {\n        this.renderTrack();\n        this.renderProgress();\n        this.renderLabel();\n        this.renderAnnotations();\n    };\n    ProgressBar.prototype.createSecElement = function () {\n        var secElement = document.getElementById(this.element.id + 'Secondary_Element');\n        if (secElement) {\n            secElement.innerHTML = '';\n            this.secElement = secElement;\n            return;\n        }\n        this.secElement = createElement('div', {\n            id: this.element.id + 'Secondary_Element',\n            styles: 'position: absolute',\n        });\n        this.element.appendChild(this.secElement);\n    };\n    /**\n     * To set the left and top position for annotation for center aligned\n     */\n    ProgressBar.prototype.setSecondaryElementPosition = function () {\n        var element = this.secElement;\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = getElement(this.svgObject.id).getBoundingClientRect();\n        element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    };\n    ProgressBar.prototype.createSVG = function () {\n        this.removeSvg();\n        this.renderer = new SvgRenderer(this.element.id);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + 'SVG',\n            width: this.progressSize.width,\n            height: this.progressSize.height,\n            style: 'background-color:' + this.themeStyle.backgroundColor\n        });\n    };\n    ProgressBar.prototype.clipPathElement = function () {\n        this.clipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippath' });\n        this.bufferClipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippathBuffer' });\n    };\n    ProgressBar.prototype.renderTrack = function () {\n        if (this.type === 'Linear') {\n            this.linear.renderLinearTrack();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularTrack();\n        }\n    };\n    ProgressBar.prototype.renderProgress = function () {\n        this.clipPathElement();\n        if (this.type === 'Linear') {\n            this.linear.renderLinearProgress();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularProgress();\n        }\n    };\n    ProgressBar.prototype.renderLabel = function () {\n        if (this.type === 'Linear' && this.showProgressValue && !this.isIndeterminate) {\n            this.linear.renderLinearLabel();\n        }\n        else if (this.type === 'Circular' && this.showProgressValue && !this.isIndeterminate) {\n            this.circular.renderCircularLabel();\n        }\n        this.element.appendChild(this.svgObject);\n    };\n    ProgressBar.prototype.getPathLine = function (x, width, thickness) {\n        var moveTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) : (x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (x + (lineCapRadius / 2) * thickness) : x);\n        var lineTo = (this.enableRtl) ? ((this.cornerRadius === 'Round' && width) ?\n            (moveTo - width + (lineCapRadius * thickness)) : (moveTo - width)) :\n            ((this.cornerRadius === 'Round' && width) ? (moveTo + width - (lineCapRadius * thickness)) : (moveTo + width));\n        return 'M' + moveTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2)) +\n            'L' + lineTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2));\n    };\n    ProgressBar.prototype.calculateProgressRange = function (value, minimum, maximum) {\n        var result;\n        var endValue;\n        var min = minimum || this.minimum;\n        var max = maximum || this.maximum;\n        endValue = (value - min) / (max - min) * ((this.type === 'Linear') ? 1 : this.totalAngle);\n        result = (value < min || value > max) ? 0 : endValue;\n        return result;\n    };\n    ProgressBar.prototype.calculateSegmentSize = function (width, thickness) {\n        var count = (this.type === 'Circular' && this.totalAngle === completeAngle) ? this.segmentCount : this.segmentCount - 1;\n        var cornerCount = (this.totalAngle === completeAngle || this.type === 'Linear') ? this.segmentCount : this.segmentCount - 1;\n        var gap = this.gapWidth || ((this.type === 'Linear') ? this.themeStyle.linearGapWidth : this.themeStyle.circularGapWidth);\n        var size = (width - count * gap);\n        size = (size - ((this.cornerRadius === 'Round') ? (cornerCount * (lineCapRadius * thickness)) : 0)) / this.segmentCount;\n        gap += (this.cornerRadius === 'Round') ? lineCapRadius * thickness : 0;\n        return ' ' + size + ' ' + gap;\n    };\n    ProgressBar.prototype.createClipPath = function (clipPath, range, d, refresh, thickness, isLabel, isMaximum) {\n        var path;\n        var rect;\n        var option;\n        var posx;\n        var posy;\n        var pathWidth;\n        var x = this.progressRect.x;\n        var totalWidth = this.progressRect.width;\n        if (this.type === 'Linear') {\n            if (this.cornerRadius === 'Round4px') {\n                posx = x;\n                pathWidth = totalWidth * range;\n                posx += (!isLabel) ? (-4) : 0;\n                posy = this.progressRect.y;\n                pathWidth += ((!isLabel && isMaximum) || this.isIndeterminate) ? 4 : 0;\n            }\n            else {\n                posx = (this.enableRtl && !isLabel) ? (x + totalWidth) : x;\n                pathWidth = totalWidth * range;\n                posx += (this.cornerRadius === 'Round' && !isLabel) ?\n                    ((this.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n                posy = (this.progressRect.y + (this.progressRect.height / 2)) - (thickness / 2);\n                pathWidth += (this.cornerRadius === 'Round' && !isLabel) ? (lineCapRadius * thickness) : 0;\n            }\n            if (!refresh) {\n                rect = new RectOption(this.element.id + '_clippathrect', 'transparent', 1, 'transparent', 1, new Rect(posx, posy, thickness, pathWidth));\n                path = this.renderer.drawRectangle(rect);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathrect');\n                path.setAttribute('width', (pathWidth).toString());\n                if (this.isActive) {\n                    path.setAttribute('x', (posx).toString());\n                }\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', d);\n                path = this.renderer.drawPath(option);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathcircle');\n                path.setAttribute('d', d);\n            }\n        }\n        return path;\n    };\n    /**\n     * Theming for progress bar\n     */\n    ProgressBar.prototype.setTheme = function () {\n        this.themeStyle = getProgressThemeColor(this.theme);\n        switch (this.theme) {\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                this.cornerRadius = this.cornerRadius === 'Auto' ?\n                    ((this.type === 'Linear') ? 'Round4px' : 'Round') : this.cornerRadius;\n                break;\n            default:\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Square' : this.cornerRadius;\n        }\n    };\n    /**\n     * Annotation for progress bar\n     */\n    ProgressBar.prototype.renderAnnotation = function () {\n        if (this.progressAnnotationModule && this.annotations.length > 0) {\n            this.progressAnnotationModule.renderAnnotations(this.secElement);\n        }\n    };\n    /**\n     * Handles the progressbar resize.\n     * @return {boolean}\n     * @private\n     */\n    ProgressBar.prototype.progressResize = function (e) {\n        var _this = this;\n        // 800 used as buffer time for resize event preventing from control rendered time\n        if (!(new Date().getTime() > this.controlRenderedTimeStamp + 800)) {\n            return false;\n        }\n        var arg = {\n            bar: this,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.progressSize.width, this.progressSize.height),\n            cancel: (this.cancelResize) ? true : false,\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            arg.currentSize = _this.progressSize;\n            _this.trigger('resized', arg);\n            if ((_this.width === null || _this.height === null) && !arg.cancel) {\n                _this.secElement.innerHTML = '';\n                _this.calculateProgressBarSize();\n                _this.createSVG();\n                _this.renderElements();\n            }\n        }, 500);\n        return false;\n    };\n    ProgressBar.prototype.progressMouseClick = function (e) {\n        this.mouseEvent(mouseClick, e);\n    };\n    ProgressBar.prototype.progressMouseDown = function (e) {\n        this.mouseEvent(mouseDown, e);\n    };\n    ProgressBar.prototype.progressMouseMove = function (e) {\n        this.mouseEvent(mouseMove, e);\n    };\n    ProgressBar.prototype.progressMouseUp = function (e) {\n        this.mouseEvent(mouseUp, e);\n    };\n    ProgressBar.prototype.progressMouseLeave = function (e) {\n        this.mouseEvent(mouseLeave, e);\n    };\n    ProgressBar.prototype.mouseEvent = function (eventName, e) {\n        var element = e.target;\n        this.trigger(eventName, { target: element.id });\n    };\n    /**\n     * Method to un-bind events for progress bar\n     */\n    ProgressBar.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, 'click', this.progressMouseClick);\n        EventHandler.remove(this.element, startEvent, this.progressMouseDown);\n        EventHandler.remove(this.element, moveEvent, this.progressMouseMove);\n        EventHandler.remove(this.element, stopEvent, this.progressMouseUp);\n        EventHandler.remove(this.element, cancelEvent, this.progressMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    /**\n     * Method to bind events for bullet chart\n     */\n    ProgressBar.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, 'click', this.progressMouseClick, this);\n        EventHandler.add(this.element, startEvent, this.progressMouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.progressMouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.progressMouseUp, this);\n        EventHandler.add(this.element, cancelEvent, this.progressMouseLeave, this);\n        this.resizeBounds = this.progressResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    ProgressBar.prototype.removeSvg = function () {\n        var svgElement = document.getElementById(this.element.id + 'SVG');\n        if (svgElement) {\n            remove(svgElement);\n        }\n    };\n    ProgressBar.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'annotations':\n                    this.secElement.innerHTML = '';\n                    this.renderAnnotation();\n                    break;\n                case 'value':\n                    this.cancelResize = (this.animation.enable) ? true : false;\n                    this.argsData = {\n                        value: this.value,\n                        progressColor: this.argsData.progressColor,\n                        trackColor: this.argsData.trackColor\n                    };\n                    if (this.argsData.value < oldProp.value && this.animation.enable) {\n                        this.argsData.value = oldProp.value;\n                    }\n                    if (this.argsData.value === this.maximum) {\n                        this.trigger(progressCompleted, this.argsData);\n                    }\n                    else {\n                        this.trigger(valueChanged, this.argsData);\n                    }\n                    if (this.type === 'Circular') {\n                        this.circular.renderCircularProgress(this.previousEndAngle, this.previousTotalEnd, !isNullOrUndefined(oldProp.value));\n                        if (this.showProgressValue) {\n                            this.circular.renderCircularLabel();\n                        }\n                        if (this.progressAnnotationModule && this.animation.enable && !this.isIndeterminate) {\n                            this.annotateAnimation.doAnnotationAnimation(this.clipPath, this, this.annotateEnd, this.annotateTotal);\n                        }\n                    }\n                    else {\n                        this.linear.renderLinearProgress(!isNullOrUndefined(oldProp.value), this.previousWidth);\n                    }\n                    break;\n                case 'animation':\n                    this.createSVG();\n                    this.renderElements();\n                    break;\n            }\n        }\n    };\n    ProgressBar.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'ProgressAnnotation',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    ProgressBar.prototype.getPersistData = function () {\n        return ' ';\n    };\n    ProgressBar.prototype.show = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Visible');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = false;\n                if (this.type === 'Linear') {\n                    this.linear.renderLinearProgress(true);\n                }\n                else {\n                    this.circular.renderCircularProgress(null, null, true);\n                }\n            }\n        }\n    };\n    ProgressBar.prototype.hide = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Hidden');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = true;\n            }\n        }\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of ProgressBar\n     */\n    ProgressBar.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.removeSvg();\n        this.svgObject = null;\n        this.element.classList.remove('e-progressbar');\n        if (!this.refreshing) {\n            this.destroyIndeterminate = true;\n        }\n    };\n    __decorate([\n        Property('Linear')\n    ], ProgressBar.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgress\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(100)\n    ], ProgressBar.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"radius\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], ProgressBar.prototype, \"segmentCount\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"gapWidth\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"segmentColor\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isIndeterminate\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isActive\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isGradient\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isStriped\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"role\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"trackColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"progressColor\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"trackThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"progressThickness\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enablePieProgress\", void 0);\n    __decorate([\n        Property('Fabric')\n    ], ProgressBar.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"showProgressValue\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableProgressSegments\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontStyle: null, fontWeight: 'Normal', fontFamily: null }, Font)\n    ], ProgressBar.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ProgressBar.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], ProgressBar.prototype, \"animation\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"valueChanged\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"progressCompleted\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Collection([{}], ProgressAnnotationSettings)\n    ], ProgressBar.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([{}], RangeColor)\n    ], ProgressBar.prototype, \"rangeColors\", void 0);\n    ProgressBar = __decorate([\n        NotifyPropertyChanges\n    ], ProgressBar);\n    return ProgressBar;\n}(Component));\nexport { ProgressBar };\n","import * as index from './index';\nindex.ProgressBar.Inject(index.ProgressAnnotation);\nexport * from './index';\n"],"names":["convertToHexCode","value","componentToHex","r","g","b","hex","toString","length","convertHexToColor","result","exec","ColorValue","parseInt","colorNameToHex","color","element","document","body","appendChild","createElement","id","getElementById","style","window","getComputedStyle","remove","isRGBValue","degreeToLocation","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","getPathArc","startAngle","endAngle","enableRtl","pieView","start","end","largeArcFlag","sweepFlag","stringToNumber","containerSize","undefined","indexOf","setAttributes","options","keys","Object","i","setAttribute","effect","currentTime","startValue","endValue","duration","getElement","removeElement","getProgressThemeColor","theme","linearTrackColor","linearProgressColor","circularTrackColor","circularProgressColor","backgroundColor","fontColor","linearFontFamily","linearFontSize","linearFontStyle","circularFontFamily","circularFontStyle","circularFontSize","progressOpacity","trackOpacity","bufferOpacity","linearGapWidth","circularGapWidth","linearTrackThickness","linearProgressThickness","circularTrackThickness","circularProgressThickness","success","danger","warning","info","__extends","extendStatics","d","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","Rect","height","width","Size","Pos","RectOption","_super","fill","opacity","rect","rx","ry","transform","dashArray","_this","call","stroke","PathOption","TextOption","fontSize","fontStyle","fontFamily","fontWeight","textAnchor","ProgressLocation","__decorate","decorators","target","key","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Margin","apply","Property","ChildProperty","Font","Animation","ProgressAnnotationSettings","RangeColor","svgLink","AnnotationBase","control","render","annotation","index","styles","innerHTML","content","processAnnotation","parentElement","annotationElement","location","setElementStyle","redraw","argsData","cancel","name","trigger","Location","annotationRadius","annotationAngle","left","top","angle","radius1","parseFloat","progressRect","round","progressSize","ProgressAnimation","doLinearAnimation","progress","delay","previousWidth","active","animation","linearPath","getAttribute","opacityValue","cornerRadius","rtlX","visibility","animate","args","cancelResize","timeStamp","isActive","activeAnimate","model","trackColor","progressColor","doLinearIndeterminate","progressWidth","thickness","clipPath","enableProgressSegments","getPathLine","destroyIndeterminate","doStripedAnimation","point","doCircularAnimation","progressEnd","totalEnd","previousTotal","startPos","endPos","circularPath","pathRadius","isNullOrUndefined","doCircularIndeterminate","circularProgress","doLabelAnimation","labelPath","textSize","label","text","xPos","valueChanged","labelText","labelStyle","labelPos","textAlignment","posX","type","totalAngle","doAnnotationAnimation","previousEnd","annotatElementChanged","firstAnnotatElement","annotateValueChanged","annotateValue","isAnnotation","annotations","progressAnnotationModule","children","tagName","minimum","maximum","annotateTotal","annotateEnd","t","time","pow","ProgressAnnotation","renderAnnotations","map","enable","isIndeterminate","getModuleName","destroy","Segment","createLinearSegment","locX","locY","gapWidth","themeStyle","avlWidth","segmentCount","avlSegWidth","segWidth","option","segmentPath","gap","segmentGroup","renderer","createGroup","count","ceil","j","tolWidth","linearThickness","progressThickness","segmentColor","getLinearSegmentPath","drawPath","createCircularSegment","widthToAngle","size","avlTolEnd","avlEnd","circularSegment","segmentEnd","gapCount","floor","avlSegEnd","circularThickness","min","max","createLinearRange","totalWidth","gradient","validRange","rangePath","startX","endX","endColor","startY","rangeGroup","range","rangeColors","rangeMin","rangeMax","gradX","calculateProgressRange","isGradient","setLinearGradientColor","createCircularRange","isValidRange","tolAngle","setCircularGradientColor","startColor","linearGradient","stopColor","x1","x2","colorStop","drawGradient","firstElementChild","rad","pos1","pos2","y1","y2","Linear","segment","renderLinearTrack","linearTrack","linearTrackGroup","isRange","trackThickness","createRoundCornerSegment","trackWidth","getTotalLength","segmentSize","calculateSegmentSize","svgObject","renderLinearProgress","refresh","linearProgress","linearProgressWidth","clipPathLinear","clipPathIndeterminate","linearProgressGroup","animationdelay","segmentWidth","strippedStroke","ismaximum","isStriped","checkingLinearProgressColor","secondaryProgress","renderLinearBuffer","renderLinearStriped","renderActiveState","bufferWidth","createClipPath","linearBuffer","secondaryProgressWidth","clipPathBuffer","linearBufferGroup","linearBufferWidth","bufferClipPath","renderLinearLabel","linearlabel","linearValue","posY","labelValue","defaultPos","far","center","rgbValue","contrast","linearLabelGroup","fontBackground","String","measureText","createText","progressGroup","linearActive","activeClip","group","stop","defs","createDefs","createElementNS","stopOption","offset","stop-color","stop-opacity","spreadMethod","gradientUnits","gradientTransform","linearColor","role","pathtype","path","endWidth","endRadius","isTrack","pathType","Circular","renderCircularTrack","circularTrack","strokeWidth","circularTrackGroup","trackEndAngle","maxThickness","availableSize","enablePieProgress","renderCircularProgress","previousTotalEnd","previousPath","progressTotalAngle","linearClipPath","circularProgressGroup","progressEndAngle","innerRadius","previousEndAngle","checkingCircularProgressColor","validateSegmentSize","renderCircularBuffer","bufferEnd","circularBuffer","circularBufferGroup","renderCircularLabel","circularLabel","circularValue","circularLabelGroup","circularActive","validSegment","rDiff","progressSegment","abs","circularColor","ProgressBar","linear","circular","annotateAnimation","preRender","isBlazor","unWireEvents","initPrivateVariable","wireEvents","progressBar","display","position","calculateProgressBarSize","setTheme","createSVG","controlRendering","renderElements","renderComplete","controlRenderedTimeStamp","Date","getTime","containerWidth","clientWidth","offsetWidth","containerHeight","clientHeight","margin","right","bottom","createSecElement","renderAnnotation","setSecondaryElementPosition","renderTrack","renderProgress","renderLabel","secElement","getBoundingClientRect","svgRect","removeSvg","SvgRenderer","createSvg","clipPathElement","showProgressValue","moveTo","lineTo","cornerCount","isLabel","isMaximum","posx","posy","pathWidth","drawRectangle","progressResize","e","arg","bar","currentSize","previousSize","resizeTo","clearTimeout","setTimeout","isDestroyed","progressMouseClick","mouseEvent","progressMouseDown","progressMouseMove","progressMouseUp","progressMouseLeave","eventName","startEvent","Browser","touchStartEvent","moveEvent","touchMoveEvent","stopEvent","touchEndEvent","cancelEvent","isPointer","EventHandler","removeEventListener","isTouch","resizeBounds","add","bind","addEventListener","svgElement","onPropertyChanged","newProp","oldProp","_i","_a","requiredModules","modules","some","push","member","getPersistData","show","hide","classList","refreshing","Complex","Event","Collection","NotifyPropertyChanges","Component","index.ProgressBar","Inject","index.ProgressAnnotation"],"mappings":"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"}